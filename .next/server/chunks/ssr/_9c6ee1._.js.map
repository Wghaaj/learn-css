{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dianakravchuk/learn-css/app/learn-html/page.tsx"],"sourcesContent":["\nimport '../css/welcome.css';\nimport '../css/html.css';\nimport Link from 'next/link';\nexport default function Page() {\n  return (\n    <div className=\"max-w-screen-lg p-10\">\n      <h1 className=\"title pb-5\">Welcome to Learn HTML!</h1>\n      <p className=\"pb-2\">HTML (HyperText Markup Language) is the main language used to structure web pages. It uses elements and attributes to organize content meaningfully.</p>\n      <p className=\"pb-2\">The Document Object Model (DOM) represents an HTML document as a structured set of objects. When a browser loads a page, it turns each HTML element into a JavaScript object, creating a tree of nodes.</p>\n\n      <p className='text-lg pt-5 pb-2'><code>&lt;html&gt;</code></p>\n      <p>The <code className='code dark:bg-gray-800'>&lt;html&gt;</code> element is the root of an HTML document. It contains the <code className='code dark:bg-gray-800'>&lt;head&gt;</code> and <code className='code dark:bg-gray-800'>&lt;body&gt;</code>, which include all the page content.</p>\n\n      <p className=\"text-lg pt-5 pb-2\">Content language</p>\n      <p className='pb-2'>The <code className=\"code dark:bg-gray-800\">lang</code> attribute in the <code className='code dark:bg-gray-800'>&lt;html&gt;</code> tag sets the documents language. The value is usually a two- or three-letter code, sometimes with a region code (e.g., <code className=\"code dark:bg-gray-800\">fr-CA</code> for French in Canada).</p>\n      <p className='pb-2'>The <samp>lang</samp> attribute can also be used inside the document for sections with different languages. It helps screen readers, search engines, and translation tools understand the content.</p>\n\n      <p className=\"text-lg pt-5 pt-2\"><code>&lt;head&gt;</code></p>\n      <p className=\"pb-5\">The <code className='code dark:bg-gray-800'>&lt;head&gt;</code> and <code className='code dark:bg-gray-800'>&lt;body&gt;</code> are the main parts inside <code className='code dark:bg-gray-800'>&lt;html&gt;</code>:</p>\n      <pre className='mb-5 dark:bg-gray-800'><code className='code dark:bg-gray-800'>&lt;!DOCTYPE html&gt;<br></br>\n          &lt;html lang=&quot;en-US&quot;&gt;<br></br>\n          &lt;head&gt;<br></br>\n          &lt;/head&gt;<br></br>\n          &lt;body&gt;<br></br>\n          &lt;/body&gt;<br></br>\n          &lt;/html&gt;</code>\n      </pre>\n      <p className=\"pb-2\">The <code className=\"code dark:bg-gray-800\">&lt;head&gt;</code> contains metadata, while the <code className=\"code dark:bg-gray-800\">&lt;body&gt;</code> holds the visible content.</p>\n\n      <p className=\"pt-5 text-lg pb-2\">Character encoding</p>\n      <p className=\"pb-2\">The <samp>charset</samp> declaration in <code className=\"code dark:bg-gray-800\">&lt;head&gt;</code> sets the character encoding. It should be placed before the title to ensure proper text display.</p>\n      <p className=\"pb-2\">While browsers default to encodings like <i>windows-1252</i>, it is best to use <code className=\"code dark:bg-gray-800\">UTF-8</code>. This encoding supports all characters and is required in HTML5.</p>\n      <p className=\"pb-5\">To set UTF-8 encoding, add:</p>\n      <pre className='mb-5 dark:bg-gray-800'><code>&lt;meta charset=&quot;utf-8&quot; /&gt;</code></pre>\n\n      <p className=\"text-lg pb-2\">Document title</p>\n      <p>Each page should have a unique title inside the <code className=\"code\">&lt;title&gt;</code> tags. This title appears in the browser tab, history, search results, and social media previews.</p>\n      <pre className=\"mt-5 mb-5 dark:bg-gray-800\">\n        <code>&lt;title&gt; Your title &lt;/title&gt;</code>\n      </pre>\n\n      <p className=\"text-lg pb-2\">Viewport metadata</p>\n      <p>The viewport meta tag makes your site responsive, ensuring it displays well on different screen sizes.</p>\n      <pre className='mt-5 mb-5 dark:bg-gray-800'>\n        <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;</code>\n      </pre>\n      <p>So far, our HTML file looks like this:</p>\n      <pre className='mt-5 mb-5 dark:bg-gray-800'><code className='code dark:bg-gray-800'>&lt;!DOCTYPE html&gt;<br></br>\n          &lt;html lang=&quot;en-US&quot;&gt;<br></br>\n          &lt;head&gt;<br></br>\n          &lt;meta charset=&quot;utf-8&quot; /&gt;<br></br>\n          &lt;title&gt; Your Title &lt;/title&gt;<br></br>\n          &lt;meta name=&quot;viewport&quot;content=&quot;width=device-width&quot; /&gt;<br></br>\n          &lt;/head&gt;<br></br>\n          &lt;body&gt;<br></br>\n          <br></br>\n          &lt;/body&gt;<br></br>\n          &lt;/html&gt;</code>\n      </pre>\n\n      <p className=\"text-lg pb-2\">CSS</p>\n      <p className='pb-5'>CSS styles for your HTML are placed inside the <code className=\"code dark:bg-gray-800\">&lt;head&gt;</code>.</p>\n      <p className='pb-5'>There are three ways to include CSS: using <code className=\"code dark:bg-gray-800\">&lt;link&gt;</code>, <code className=\"code dark:bg-gray-800\">&lt;style&gt;</code>, or the <samp>style</samp> attribute.</p>\n      <p className=\"pb-2\">The best way is to use <code className=\"code dark:bg-gray-800\">&lt;link&gt;</code> to include an external stylesheet. This keeps styles separate, improving both maintenance and performance.</p>\n      <p className='pb-2'>The syntax is <code className=\"code dark:bg-gray-800\">&lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;</code>, where <samp>styles.css</samp> is the file path. The <code className=\"code dark:bg-gray-800\">type=&quot;text/css&quot;</code> attribute is not needed unless using a different style format.</p>\n\n      <p>More information about HTML you can find <Link href=\"https://web.dev/learn/html\" className='underline text-blue-700'>here</Link></p>\n</div>\n  )\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 685, "column": 0}, "map": {"version":3,"sources":["file:///Users/dianakravchuk/learn-css/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,mSAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 790, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}