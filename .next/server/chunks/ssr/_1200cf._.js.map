{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dianakravchuk/learn-css/app/selectors/page.tsx"],"sourcesContent":["\nimport '../css/welcome.css';\nexport default function Page() {\n  return (\n    <div className=\"max-w-screen-lg p-10 main\">\n      <h1 className=\"title pb-5\">Selectors</h1>\n      <p className=\"pb-2\">CSS <span className=\"bold\">selectors</span> allow you to <span className=\"bold\">target HTML elements</span> and apply styles to them. Different selectors help you style <span className=\"bold\">specific elements, groups of elements, or elements with certain attributes.</span></p>\n\n      <p className=\"text-xl pb-5 pt-5\">Types of Selectors</p>\n      <ol className='ml-5'>\n        <li className='bold'>Basic Selectors</li>\n        <p className=\"pb-2 pt-2\">✅ Element Selector &mdash; Targets all elements of a type </p>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              p &#123; <br></br>\n              &ensp; color:blue;  <span className=\"text-gray-400\"><i>/ * All &lt;p&gt; elements will be blue * / </i></span><br></br>\n              &#125;\n          </code>\n        </pre>\n        <p className=\"pb-2 pt-2\">✅ Class Selector &mdash; Targets elements with a specific class </p>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              .box &#123; <br></br>\n              &ensp; width: 200px; <br></br>\n              &ensp; height: 100px; <br></br>\n              &#125;\n          </code>\n        </pre>\n        <pre className=\"code dark:bg-gray-800\">\n          <code>\n            &lt;div class=&quot;box&quot;&gt;&lt;/div&gt; <span className=\"text-gray-400\"><i>&lt;!-- This div will have the styles --&gt;</i></span>\n          </code>\n        </pre>\n        <p className=\"pb-2 pt-2\">✅ ID Selector &mdash; Targets a specific element with an ID </p>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              #unique &#123; <br></br>\n              &ensp; width: 200px; <br></br>\n              &ensp; height: 100px; <br></br>\n              &#125;\n          </code>\n        </pre>\n        <pre className=\"code dark:bg-gray-800\">\n          <code>\n            &lt;p id=&quot;unique&quot;&gt; This text is unique. &lt;/p&gt;\n          </code>\n        </pre>\n        <p className=\"pb-2 pt-2\">✅ Universal Selector <code className=\"code dark:bg-gray-800 p-2\">(*)</code> &mdash; Selects <span className=\"bold\">all</span> elements </p>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              * &#123; <br></br>\n              &ensp; magrin: 0; <br></br>\n              &ensp; padding: 0; <br></br>\n              &#125;\n          </code>\n        </pre>\n        <li className=\"bold\">Grouping and Combining Selectors</li>\n        <p className=\"pb-2 pt-2\">✅ Group Selector <code className=\"code dark:bg-gray-800 p-2\">(,)</code> &mdash; Styles multiple elements at once </p>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              h1, h2, p &#123; <br></br>\n              &ensp; font-family: Arial, sans-serif; <br></br>\n              &#125;\n          </code>\n        </pre>\n        <p className=\"pb-2 pt-2\">✅ Descendant Selector <code className=\"code dark:bg-gray-800 p-2\">( )</code> &mdash; Targets nested elements </p>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              article p &#123; <br></br>\n              &ensp; color: gray; <br></br>\n              &#125;\n          </code>\n        </pre>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              &lt;article&gt; <br></br>\n              &ensp; &lt;p&gt; This paragraph inside the article will be gray. &lt;/p&gt;\n          </code>\n        </pre>\n        <p className=\"pb-2 pt-2\">✅ Child Selector <code className=\"code dark:bg-gray-800 p-2\">( &gt; )</code> &mdash; Targets <span className=\"bold\">direct</span> children </p>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              nav &gt; ul &#123; <br></br>\n              &ensp; list-style: none; <br></br>\n              &#125;\n          </code>\n        </pre>\n        <p className=\"pb-2 pt-2\">✅ Adjacent Sibling Selector <code className=\"code dark:bg-gray-800 p-2\">( + )</code> &mdash; Targets the next immediate sibling </p>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              h1 + p &#123; <br></br>\n              &ensp; font-style: italic; <br></br>\n              &#125;\n          </code>\n        </pre>\n        <p className=\"pb-2 pt-2\">✅ General Sibling Selector <code className=\"code dark:bg-gray-800 p-2\">( ~ )</code> &mdash; Targets all siblings </p>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              h1 ~ p &#123; <br></br>\n              &ensp; font-style: italic; <br></br>\n              &#125;\n          </code>\n        </pre>\n        <p className=\"pb-2 pt-2\">✅ Attribute Selectors </p>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              input[type=&quot;text&quot;] &#123; <br></br>\n              &ensp; border: 1px solid black; <br></br>\n              &#125;\n          </code>\n        </pre>\n        <p className=\"pb-2 pt-2\">✅ Pseudo-Class & Pseudo-Element Selectors (More later) </p>\n        <pre className=\"code dark:bg-gray-800 mb-5\">\n          <code>\n              a:hover &#123; <br></br>\n              &ensp; color: red; <br></br>\n              &#125;\n          </code>\n        </pre>\n      </ol>          \n      \n    </div>\n  )\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 690, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 690, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 696, "column": 0}, "map": {"version":3,"sources":["file:///Users/dianakravchuk/learn-css/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,mSAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 801, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}